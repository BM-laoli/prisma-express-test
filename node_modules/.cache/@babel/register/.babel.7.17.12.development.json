{"{\"assumptions\":{},\"sourceRoot\":\"/Volumes/WD_BLACK/origin/prisma-express-test/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Volumes/WD_BLACK/origin/prisma-express-test\",\"filename\":\"/Volumes/WD_BLACK/origin/prisma-express-test/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/WD_BLACK/origin/prisma-express-test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.17.12:development":{"value":{"code":"const express = require('express');\n\nconst bodyParser = require('body-parser');\n\nconst prismaClint = require('@prisma/client');\n\nconst {\n  graphqlHTTP\n} = require('express-graphql');\n\nconst {\n  makeExecutableSchema\n} = require('@graphql-tools/schema'); // 对于es6 使用  npx babel-node  index.js 去编译 部分esModule莫哭啊\n// -------------init------------- \n\n\nconst prisma = new prismaClint.PrismaClient();\nconst app = express(); // -------------使用graphql------------- \n// 1. 定义类型 和 query\n\nconst typeDefs = `\n  type User {\n    email: String!\n    name: String\n  }\n  type Query {\n    allUsers: [ User! ] !\n  }\n  `; // 2. 定义irsolvers 和 与前面对于的query参数\n\nconst resolvers = {\n  Query: {\n    allUsers: () => {\n      return prisma.user.findMany();\n    }\n  }\n}; // 3. 定义 schema 规则\n\nconst schema = makeExecutableSchema({\n  resolvers,\n  typeDefs\n});\napp.use(bodyParser.json());\napp.use(\"/graphql\", graphqlHTTP({\n  schema\n}));\nconst server = app.listen(3000, () => {\n  console.log('server start');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHlQYXJzZXIiLCJwcmlzbWFDbGludCIsImdyYXBocWxIVFRQIiwibWFrZUV4ZWN1dGFibGVTY2hlbWEiLCJwcmlzbWEiLCJQcmlzbWFDbGllbnQiLCJhcHAiLCJ0eXBlRGVmcyIsInJlc29sdmVycyIsIlF1ZXJ5IiwiYWxsVXNlcnMiLCJ1c2VyIiwiZmluZE1hbnkiLCJzY2hlbWEiLCJ1c2UiLCJqc29uIiwic2VydmVyIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiL1ZvbHVtZXMvV0RfQkxBQ0svb3JpZ2luL3ByaXNtYS1leHByZXNzLXRlc3QvIiwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpIFxuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJylcbmNvbnN0IHByaXNtYUNsaW50ID0gcmVxdWlyZSgnQHByaXNtYS9jbGllbnQnKVxuY29uc3QgeyBncmFwaHFsSFRUUCB9ID0gcmVxdWlyZSgnZXhwcmVzcy1ncmFwaHFsJyk7XG5cbmNvbnN0IHsgbWFrZUV4ZWN1dGFibGVTY2hlbWEgfSA9IHJlcXVpcmUoJ0BncmFwaHFsLXRvb2xzL3NjaGVtYScpXG4vLyDlr7nkuo5lczYg5L2/55SoICBucHggYmFiZWwtbm9kZSAgaW5kZXguanMg5Y6757yW6K+RIOmDqOWIhmVzTW9kdWxl6I6r5ZOt5ZWKXG5cblxuLy8gLS0tLS0tLS0tLS0tLWluaXQtLS0tLS0tLS0tLS0tIFxuY29uc3QgcHJpc21hID0gbmV3IHByaXNtYUNsaW50LlByaXNtYUNsaWVudCgpXG5jb25zdCBhcHAgPSBleHByZXNzKClcblxuLy8gLS0tLS0tLS0tLS0tLeS9v+eUqGdyYXBocWwtLS0tLS0tLS0tLS0tIFxuLy8gMS4g5a6a5LmJ57G75Z6LIOWSjCBxdWVyeVxuY29uc3QgdHlwZURlZnMgPSBgXG4gIHR5cGUgVXNlciB7XG4gICAgZW1haWw6IFN0cmluZyFcbiAgICBuYW1lOiBTdHJpbmdcbiAgfVxuICB0eXBlIFF1ZXJ5IHtcbiAgICBhbGxVc2VyczogWyBVc2VyISBdICFcbiAgfVxuICBgXG5cbi8vIDIuIOWumuS5iWlyc29sdmVycyDlkowg5LiO5YmN6Z2i5a+55LqO55qEcXVlcnnlj4LmlbBcbmNvbnN0IHJlc29sdmVycyA9IHtcbiAgUXVlcnk6IHtcbiAgICBhbGxVc2VyczogKCkgPT4ge1xuICAgICAgcmV0dXJuIHByaXNtYS51c2VyLmZpbmRNYW55KClcbiAgICB9XG4gIH1cbn1cblxuLy8gMy4g5a6a5LmJIHNjaGVtYSDop4TliJlcbmNvbnN0IHNjaGVtYSA9IG1ha2VFeGVjdXRhYmxlU2NoZW1hKHtcbiAgcmVzb2x2ZXJzLFxuICB0eXBlRGVmc1xufSlcblxuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKVxuYXBwLnVzZShcIi9ncmFwaHFsXCIsIGdyYXBocWxIVFRQKHtcbiAgc2NoZW1hXG59KSlcblxuY29uc3Qgc2VydmVyID0gYXBwLmxpc3RlbigzMDAwLCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdzZXJ2ZXIgc3RhcnQnKTtcbn0pXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFDQSxNQUFNRSxXQUFXLEdBQUdGLE9BQU8sQ0FBQyxnQkFBRCxDQUEzQjs7QUFDQSxNQUFNO0VBQUVHO0FBQUYsSUFBa0JILE9BQU8sQ0FBQyxpQkFBRCxDQUEvQjs7QUFFQSxNQUFNO0VBQUVJO0FBQUYsSUFBMkJKLE9BQU8sQ0FBQyx1QkFBRCxDQUF4QyxDLENBQ0E7QUFHQTs7O0FBQ0EsTUFBTUssTUFBTSxHQUFHLElBQUlILFdBQVcsQ0FBQ0ksWUFBaEIsRUFBZjtBQUNBLE1BQU1DLEdBQUcsR0FBR1IsT0FBTyxFQUFuQixDLENBRUE7QUFDQTs7QUFDQSxNQUFNUyxRQUFRLEdBQUk7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQVJBLEMsQ0FVQTs7QUFDQSxNQUFNQyxTQUFTLEdBQUc7RUFDaEJDLEtBQUssRUFBRTtJQUNMQyxRQUFRLEVBQUUsTUFBTTtNQUNkLE9BQU9OLE1BQU0sQ0FBQ08sSUFBUCxDQUFZQyxRQUFaLEVBQVA7SUFDRDtFQUhJO0FBRFMsQ0FBbEIsQyxDQVFBOztBQUNBLE1BQU1DLE1BQU0sR0FBR1Ysb0JBQW9CLENBQUM7RUFDbENLLFNBRGtDO0VBRWxDRDtBQUZrQyxDQUFELENBQW5DO0FBTUFELEdBQUcsQ0FBQ1EsR0FBSixDQUFRZCxVQUFVLENBQUNlLElBQVgsRUFBUjtBQUNBVCxHQUFHLENBQUNRLEdBQUosQ0FBUSxVQUFSLEVBQW9CWixXQUFXLENBQUM7RUFDOUJXO0FBRDhCLENBQUQsQ0FBL0I7QUFJQSxNQUFNRyxNQUFNLEdBQUdWLEdBQUcsQ0FBQ1csTUFBSixDQUFXLElBQVgsRUFBaUIsTUFBTTtFQUNwQ0MsT0FBTyxDQUFDQyxHQUFSLENBQVksY0FBWjtBQUNELENBRmMsQ0FBZiJ9","map":{"version":3,"names":["express","require","bodyParser","prismaClint","graphqlHTTP","makeExecutableSchema","prisma","PrismaClient","app","typeDefs","resolvers","Query","allUsers","user","findMany","schema","use","json","server","listen","console","log"],"sourceRoot":"/Volumes/WD_BLACK/origin/prisma-express-test/","sources":["index.js"],"sourcesContent":["const express = require('express') \nconst bodyParser = require('body-parser')\nconst prismaClint = require('@prisma/client')\nconst { graphqlHTTP } = require('express-graphql');\n\nconst { makeExecutableSchema } = require('@graphql-tools/schema')\n// 对于es6 使用  npx babel-node  index.js 去编译 部分esModule莫哭啊\n\n\n// -------------init------------- \nconst prisma = new prismaClint.PrismaClient()\nconst app = express()\n\n// -------------使用graphql------------- \n// 1. 定义类型 和 query\nconst typeDefs = `\n  type User {\n    email: String!\n    name: String\n  }\n  type Query {\n    allUsers: [ User! ] !\n  }\n  `\n\n// 2. 定义irsolvers 和 与前面对于的query参数\nconst resolvers = {\n  Query: {\n    allUsers: () => {\n      return prisma.user.findMany()\n    }\n  }\n}\n\n// 3. 定义 schema 规则\nconst schema = makeExecutableSchema({\n  resolvers,\n  typeDefs\n})\n\n\napp.use(bodyParser.json())\napp.use(\"/graphql\", graphqlHTTP({\n  schema\n}))\n\nconst server = app.listen(3000, () => {\n  console.log('server start');\n})\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,gBAAD,CAA3B;;AACA,MAAM;EAAEG;AAAF,IAAkBH,OAAO,CAAC,iBAAD,CAA/B;;AAEA,MAAM;EAAEI;AAAF,IAA2BJ,OAAO,CAAC,uBAAD,CAAxC,C,CACA;AAGA;;;AACA,MAAMK,MAAM,GAAG,IAAIH,WAAW,CAACI,YAAhB,EAAf;AACA,MAAMC,GAAG,GAAGR,OAAO,EAAnB,C,CAEA;AACA;;AACA,MAAMS,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GARA,C,CAUA;;AACA,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAE;IACLC,QAAQ,EAAE,MAAM;MACd,OAAON,MAAM,CAACO,IAAP,CAAYC,QAAZ,EAAP;IACD;EAHI;AADS,CAAlB,C,CAQA;;AACA,MAAMC,MAAM,GAAGV,oBAAoB,CAAC;EAClCK,SADkC;EAElCD;AAFkC,CAAD,CAAnC;AAMAD,GAAG,CAACQ,GAAJ,CAAQd,UAAU,CAACe,IAAX,EAAR;AACAT,GAAG,CAACQ,GAAJ,CAAQ,UAAR,EAAoBZ,WAAW,CAAC;EAC9BW;AAD8B,CAAD,CAA/B;AAIA,MAAMG,MAAM,GAAGV,GAAG,CAACW,MAAJ,CAAW,IAAX,EAAiB,MAAM;EACpCC,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,CAFc,CAAf"}},"mtime":1652886245540}}